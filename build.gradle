plugins {
    id "com.gradle.plugin-publish" version "0.16.0"
    id "java-gradle-plugin"
    id 'groovy'
    id 'idea'
}

group = 'io.github.lhotari.gradle-nar-plugin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    testImplementation gradleTestKit()
    testImplementation("org.spockframework:spock-core:2.0-groovy-3.0") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
    functionalTest {
        groovy.srcDir file('src/funcTest/groovy')
        resources.srcDir file('src/funcTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
    plugins {
        gradleNarPlugin {
            id = 'io.github.lhotari.gradle-nar-plugin'
            implementationClass = 'de.fanero.gradle.plugin.nar.NarPlugin'
        }
    }
}

task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

pluginBundle {
    website = 'https://github.com/lhotari/gradle-nar-plugin'
    vcsUrl = 'https://github.com/lhotari/gradle-nar-plugin'
    description = '''Gradle plugin to support development of Apache NiFi nar archives.'''
    tags = ['nar', 'nifi']

    plugins {
        gradleNarPlugin {
            id = 'io.github.lhotari.gradle-nar-plugin'
            displayName = 'Gradle Nar Plugin'
        }
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

